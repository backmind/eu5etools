name: Build and Push Ever Updated 5etools

on:
  # Daily build to check for updates
  schedule:
    - cron: '0 6 * * *'  # Daily at 6:00 AM UTC
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      src_repo:
        description: 'Source repository URL'
        required: false
        default: 'https://github.com/5etools-mirror-3/5etools-src.git'
      src_branch:
        description: 'Source branch'
        required: false
        default: 'main'
      force_build:
        description: 'Force build even if no changes detected'
        required: false
        default: 'false'
        type: boolean

  # Build when this repo is modified
  push:
    branches: [ main ]
    paths: [ 'Dockerfile' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      src_changed: ${{ steps.check.outputs.src_changed }}
      img_changed: ${{ steps.check.outputs.img_changed }}
      should_build: ${{ steps.check.outputs.should_build }}
      src_commit: ${{ steps.check.outputs.src_commit }}
      img_commit: ${{ steps.check.outputs.img_commit }}
    steps:
      - name: Check upstream changes
        id: check
        run: |
          # Upstream repository URLs
          SRC_REPO="${{ github.event.inputs.src_repo || 'https://github.com/5etools-mirror-3/5etools-src' }}"
          IMG_REPO="https://github.com/5etools-mirror-3/5etools-img"
          
          # Get latest commits
          SRC_COMMIT=$(curl -s "https://api.github.com/repos/5etools-mirror-3/5etools-src/commits/main" | jq -r '.sha[0:7]')
          IMG_COMMIT=$(curl -s "https://api.github.com/repos/5etools-mirror-3/5etools-img/commits/main" | jq -r '.sha[0:7]')
          
          echo "src_commit=$SRC_COMMIT" >> $GITHUB_OUTPUT
          echo "img_commit=$IMG_COMMIT" >> $GITHUB_OUTPUT
          
          # Search if image already exists with these commits
          TAG="${SRC_COMMIT}-${IMG_COMMIT}"
          
          # Check if image already exists in registry
          if docker manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG > /dev/null 2>&1; then
            echo "Image with tag $TAG already exists"
            SHOULD_BUILD="false"
          else
            echo "New changes detected, need to build"
            SHOULD_BUILD="true"
          fi
          
          # Override if manual and force_build = true
          if [[ "${{ github.event.inputs.force_build }}" == "true" ]]; then
            SHOULD_BUILD="true"
          fi
          
          echo "should_build=$SHOULD_BUILD" >> $GITHUB_OUTPUT

  build-and-push:
    needs: check-changes
    if: needs.check-changes.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate metadata
        id: meta
        run: |
          # Generate timestamp
          BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          TIMESTAMP=$(date -u +'%Y%m%d-%H%M')
          
          # Generate tags
          SRC_COMMIT="${{ needs.check-changes.outputs.src_commit }}"
          IMG_COMMIT="${{ needs.check-changes.outputs.img_commit }}"
          
          COMMIT_TAG="${SRC_COMMIT}-${IMG_COMMIT}"
          TIMESTAMP_TAG="${TIMESTAMP}-${COMMIT_TAG}"
          
          echo "build_date=$BUILD_DATE" >> $GITHUB_OUTPUT
          echo "timestamp_tag=$TIMESTAMP_TAG" >> $GITHUB_OUTPUT
          echo "commit_tag=$COMMIT_TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            BUILD_DATE=${{ steps.meta.outputs.build_date }}
            BUILD_VERSION=${{ steps.meta.outputs.timestamp_tag }}
            VCS_REF=${{ github.sha }}
            SRC_REPO=${{ github.event.inputs.src_repo || 'https://github.com/5etools-mirror-3/5etools-src.git' }}
            SRC_BRANCH=${{ github.event.inputs.src_branch || 'main' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.timestamp_tag }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.commit_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update repository description
        run: |
          echo "âœ… Built new image: ${{ steps.meta.outputs.timestamp_tag }}"
          echo "ðŸ“¦ Source commit: ${{ needs.check-changes.outputs.src_commit }}"
          echo "ðŸŽ¨ Assets commit: ${{ needs.check-changes.outputs.img_commit }}"
